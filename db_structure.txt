-- Create the Experts table
CREATE TABLE Experts (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    other_details TEXT
);

-- Create the TimeSlots table
CREATE TABLE TimeSlots (
    id SERIAL PRIMARY KEY,
    day_of_week VARCHAR(9) CHECK (day_of_week IN ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')),
    start_time TIME,
    end_time TIME
);

-- Create the Services table
CREATE TABLE Services (
    id SERIAL PRIMARY KEY,
    service_name VARCHAR(100),
    duration INT,  -- Duration in minutes
    price DECIMAL(10, 2)
);

-- Create the ExpertServices table
CREATE TABLE expert_service (
    id SERIAL PRIMARY KEY,
    expert_id INT,
    service_id INT,
    FOREIGN KEY (expert_id) REFERENCES Experts(id),
    FOREIGN KEY (service_id) REFERENCES Services(id)
);

-- Create the ExpertTimeSlots table
CREATE TABLE expert_timeslot (
    id SERIAL PRIMARY KEY,
    expert_id INT,
    timeslot_id INT,
    FOREIGN KEY (expert_id) REFERENCES Experts(id),
    FOREIGN KEY (timeslot_id) REFERENCES TimeSlots(id)
);

-- Create the orders table
CREATE TABLE orders (
    id SERIAL PRIMARY KEY,
    razorpay_order_id character varying(255),
    customer_email character varying(255) NOT NULL,
    cost double precision NOT NULL,
    order_timestamp timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    payment_status character varying(255) NOT NULL,
    order_status character varying(255) NOT NULL,
    service_id bigint NOT NULL,
    service_timeslot timestamp without time zone NOT NULL,
    expert_id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    currency character varying(10) NOT NULL,
    razorpay_payment_id character varying(255),
    FOREIGN KEY (service_id) REFERENCES Services(id),
    FOREIGN KEY (expert_id) REFERENCES Experts(id)
);

CREATE TABLE skills (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE expert_skill (
    expert_id BIGINT NOT NULL,
    skill_id BIGINT NOT NULL,
    PRIMARY KEY (expert_id, skill_id),
    FOREIGN KEY (expert_id) REFERENCES experts(id) ON DELETE CASCADE,
    FOREIGN KEY (skill_id) REFERENCES skills(id) ON DELETE CASCADE
);